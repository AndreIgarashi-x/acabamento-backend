-- =====================================================
-- SCRIPT 3: LIMPAR APENAS ATIVIDADES (Mant√©m OFs)
-- =====================================================
--
-- OP√á√ÉO MAIS SEGURA: Limpa apenas atividades e pe√ßas, mas MANT√âM as OFs
--
-- ANTES DE EXECUTAR:
-- 1. ‚úÖ Execute o script BACKUP_antes_limpar.sql (recomendado)
-- 2. ‚úÖ Confirme que voc√™ quer deletar as atividades mas manter OFs
--
-- O QUE SER√Å DELETADO:
-- - Todas as pe√ßas registradas
-- - Todas as atividades (ativas, pausadas, conclu√≠das)
--
-- O QUE SER√Å MANTIDO:
-- - Usu√°rios
-- - Processos
-- - OFs (ser√£o resetadas para status 'aberta')
-- - Estrutura do banco
--
-- USE ESTE SCRIPT SE:
-- - Quer manter as OFs cadastradas
-- - Quer apenas limpar o hist√≥rico de produ√ß√£o
-- - Quer "resetar" as OFs para poderem ser trabalhadas novamente
--
-- =====================================================

-- Confirma√ß√£o de seguran√ßa
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚ö†Ô∏è  ATEN√á√ÉO: Limpeza de Atividades';
  RAISE NOTICE '';
  RAISE NOTICE 'Este script ir√°:';
  RAISE NOTICE '  ‚úÖ MANTER as OFs cadastradas';
  RAISE NOTICE '  ‚úÖ Resetar OFs para status "aberta"';
  RAISE NOTICE '  üóëÔ∏è  DELETAR todas as pe√ßas registradas';
  RAISE NOTICE '  üóëÔ∏è  DELETAR todas as atividades';
  RAISE NOTICE '';
  RAISE NOTICE 'Voc√™ tem 5 segundos para cancelar (Ctrl+C)...';
  RAISE NOTICE '';
  PERFORM pg_sleep(5);
  RAISE NOTICE 'üîÑ INICIANDO LIMPEZA...';
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 1. LIMPAR PE√áAS REGISTRADAS
-- =====================================================
DO $$
DECLARE
  count_before INTEGER;
  count_after INTEGER;
BEGIN
  SELECT COUNT(*) INTO count_before FROM pecas_registradas;
  RAISE NOTICE 'üì¶ Deletando % pe√ßas registradas...', count_before;

  DELETE FROM pecas_registradas;

  SELECT COUNT(*) INTO count_after FROM pecas_registradas;
  RAISE NOTICE '‚úÖ Pe√ßas deletadas: % (Restantes: %)', count_before, count_after;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 2. LIMPAR ATIVIDADES
-- =====================================================
DO $$
DECLARE
  count_before INTEGER;
  count_after INTEGER;
BEGIN
  SELECT COUNT(*) INTO count_before FROM activities;
  RAISE NOTICE '‚è±Ô∏è  Deletando % atividades...', count_before;

  DELETE FROM activities;

  SELECT COUNT(*) INTO count_after FROM activities;
  RAISE NOTICE '‚úÖ Atividades deletadas: % (Restantes: %)', count_before, count_after;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 3. RESETAR STATUS DAS OFs PARA 'ABERTA'
-- =====================================================
DO $$
DECLARE
  count_em_andamento INTEGER;
  count_concluidas INTEGER;
  count_total INTEGER;
BEGIN
  -- Contar OFs em andamento
  SELECT COUNT(*) INTO count_em_andamento
  FROM ofs
  WHERE status = 'em_andamento';

  -- Contar OFs conclu√≠das
  SELECT COUNT(*) INTO count_concluidas
  FROM ofs
  WHERE status = 'concluida';

  RAISE NOTICE 'üîÑ Resetando status das OFs...';
  RAISE NOTICE '  - OFs em andamento: %', count_em_andamento;
  RAISE NOTICE '  - OFs conclu√≠das: %', count_concluidas;

  -- Resetar todas para 'aberta'
  UPDATE ofs
  SET status = 'aberta'
  WHERE status IN ('em_andamento', 'concluida');

  -- Contar total de OFs
  SELECT COUNT(*) INTO count_total FROM ofs;

  RAISE NOTICE '‚úÖ Status resetado para "aberta"';
  RAISE NOTICE '  - Total de OFs: %', count_total;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 4. VERIFICA√á√ÉO FINAL
-- =====================================================
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üîç VERIFICA√á√ÉO FINAL:';
  RAISE NOTICE '====================';
END $$;

SELECT
  'Pe√ßas Registradas' AS tabela,
  COUNT(*) AS registros,
  'Deletadas' AS status
FROM pecas_registradas

UNION ALL

SELECT
  'Atividades' AS tabela,
  COUNT(*) AS registros,
  'Deletadas' AS status
FROM activities

UNION ALL

SELECT
  'OFs (MANTIDAS)' AS tabela,
  COUNT(*) AS registros,
  'Preservadas' AS status
FROM ofs

UNION ALL

SELECT
  'OFs Abertas' AS tabela,
  COUNT(*) AS registros,
  'Dispon√≠veis' AS status
FROM ofs
WHERE status = 'aberta'

UNION ALL

SELECT
  'Usu√°rios (MANTIDOS)' AS tabela,
  COUNT(*) AS registros,
  'Preservados' AS status
FROM users

UNION ALL

SELECT
  'Processos (MANTIDOS)' AS tabela,
  COUNT(*) AS registros,
  'Preservados' AS status
FROM processes

ORDER BY tabela;

-- Listagem resumida das OFs mantidas
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üìã OFs MANTIDAS (Resumo):';
  RAISE NOTICE '====================';
END $$;

SELECT
  codigo AS of_codigo,
  referencia,
  descricao,
  quantidade AS pecas,
  status
FROM ofs
ORDER BY codigo
LIMIT 10;

-- Mensagem final
DO $$
DECLARE
  total_ofs INTEGER;
BEGIN
  SELECT COUNT(*) INTO total_ofs FROM ofs;

  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ LIMPEZA CONCLU√çDA!';
  RAISE NOTICE '';
  RAISE NOTICE 'üìä Resultado:';
  RAISE NOTICE '  - % OFs mantidas e resetadas', total_ofs;
  RAISE NOTICE '  - 0 atividades (deletadas)';
  RAISE NOTICE '  - 0 pe√ßas registradas (deletadas)';
  RAISE NOTICE '';
  RAISE NOTICE 'üéØ Pr√≥ximo passo:';
  RAISE NOTICE '  - As OFs est√£o dispon√≠veis para novas atividades';
  RAISE NOTICE '  - Status: "aberta"';
  RAISE NOTICE '';
END $$;
