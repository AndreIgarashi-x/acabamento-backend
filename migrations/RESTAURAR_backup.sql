-- =====================================================
-- SCRIPT 4: RESTAURAR BACKUP (Se algo der errado)
-- =====================================================
--
-- QUANDO USAR:
-- - Se voc√™ deletou dados por engano
-- - Se precisa voltar ao estado anterior
-- - Se o script de limpeza causou problemas
--
-- REQUISITO:
-- - Voc√™ DEVE ter executado BACKUP_antes_limpar.sql primeiro
-- - As tabelas de backup devem existir:
--   * backup_ofs_teste
--   * backup_activities_teste
--   * backup_pecas_teste
--
-- ATEN√á√ÉO:
-- - Este script N√ÉO faz merge de dados
-- - Ele SUBSTITUI os dados atuais pelos do backup
-- - Dados criados AP√ìS o backup ser√£o PERDIDOS
--
-- =====================================================

-- Verificar se backups existem
DO $$
DECLARE
  backup_ofs_exists BOOLEAN;
  backup_activities_exists BOOLEAN;
  backup_pecas_exists BOOLEAN;
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üîç VERIFICANDO BACKUPS...';
  RAISE NOTICE '';

  -- Verificar tabela backup_ofs_teste
  SELECT EXISTS (
    SELECT FROM information_schema.tables
    WHERE table_name = 'backup_ofs_teste'
  ) INTO backup_ofs_exists;

  -- Verificar tabela backup_activities_teste
  SELECT EXISTS (
    SELECT FROM information_schema.tables
    WHERE table_name = 'backup_activities_teste'
  ) INTO backup_activities_exists;

  -- Verificar tabela backup_pecas_teste
  SELECT EXISTS (
    SELECT FROM information_schema.tables
    WHERE table_name = 'backup_pecas_teste'
  ) INTO backup_pecas_exists;

  -- Mostrar resultados
  IF backup_ofs_exists THEN
    RAISE NOTICE '‚úÖ backup_ofs_teste encontrada';
  ELSE
    RAISE NOTICE '‚ùå backup_ofs_teste N√ÉO encontrada';
  END IF;

  IF backup_activities_exists THEN
    RAISE NOTICE '‚úÖ backup_activities_teste encontrada';
  ELSE
    RAISE NOTICE '‚ùå backup_activities_teste N√ÉO encontrada';
  END IF;

  IF backup_pecas_exists THEN
    RAISE NOTICE '‚úÖ backup_pecas_teste encontrada';
  ELSE
    RAISE NOTICE '‚ùå backup_pecas_teste N√ÉO encontrada';
  END IF;

  -- Abortar se algum backup n√£o existir
  IF NOT (backup_ofs_exists AND backup_activities_exists AND backup_pecas_exists) THEN
    RAISE EXCEPTION 'ERRO: Tabelas de backup n√£o encontradas! Execute BACKUP_antes_limpar.sql primeiro.';
  END IF;

  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ Todos os backups encontrados!';
  RAISE NOTICE '';
END $$;

-- Confirma√ß√£o de seguran√ßa
DO $$
BEGIN
  RAISE NOTICE '‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è  ATEN√á√ÉO  ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è';
  RAISE NOTICE '';
  RAISE NOTICE 'Este script ir√°:';
  RAISE NOTICE '  1. DELETAR todos os dados atuais';
  RAISE NOTICE '  2. RESTAURAR dados do backup';
  RAISE NOTICE '';
  RAISE NOTICE '‚ö†Ô∏è  Dados criados AP√ìS o backup ser√£o PERDIDOS!';
  RAISE NOTICE '';
  RAISE NOTICE 'Voc√™ tem 10 segundos para cancelar (Ctrl+C)...';
  RAISE NOTICE '';
  PERFORM pg_sleep(10);
  RAISE NOTICE 'üîÑ INICIANDO RESTAURA√á√ÉO...';
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 1. LIMPAR DADOS ATUAIS
-- =====================================================
DO $$
BEGIN
  RAISE NOTICE 'üóëÔ∏è  PASSO 1: Limpando dados atuais...';
  RAISE NOTICE '';
END $$;

-- Deletar pe√ßas (filho de activities)
DELETE FROM pecas_registradas;

-- Deletar atividades
DELETE FROM activities;

-- Deletar OFs
DELETE FROM ofs;

DO $$
BEGIN
  RAISE NOTICE '‚úÖ Dados atuais removidos';
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 2. RESTAURAR OFs
-- =====================================================
DO $$
DECLARE
  count_ofs INTEGER;
BEGIN
  RAISE NOTICE 'üìã PASSO 2: Restaurando OFs...';

  INSERT INTO ofs
  SELECT * FROM backup_ofs_teste;

  SELECT COUNT(*) INTO count_ofs FROM ofs;
  RAISE NOTICE '‚úÖ OFs restauradas: %', count_ofs;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 3. RESTAURAR ATIVIDADES
-- =====================================================
DO $$
DECLARE
  count_activities INTEGER;
BEGIN
  RAISE NOTICE '‚è±Ô∏è  PASSO 3: Restaurando Atividades...';

  INSERT INTO activities
  SELECT * FROM backup_activities_teste;

  SELECT COUNT(*) INTO count_activities FROM activities;
  RAISE NOTICE '‚úÖ Atividades restauradas: %', count_activities;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 4. RESTAURAR PE√áAS REGISTRADAS
-- =====================================================
DO $$
DECLARE
  count_pecas INTEGER;
BEGIN
  RAISE NOTICE 'üì¶ PASSO 4: Restaurando Pe√ßas Registradas...';

  INSERT INTO pecas_registradas
  SELECT * FROM backup_pecas_teste;

  SELECT COUNT(*) INTO count_pecas FROM pecas_registradas;
  RAISE NOTICE '‚úÖ Pe√ßas restauradas: %', count_pecas;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 5. VERIFICA√á√ÉO FINAL
-- =====================================================
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üîç VERIFICA√á√ÉO FINAL:';
  RAISE NOTICE '====================';
END $$;

SELECT
  'OFs' AS tabela,
  (SELECT COUNT(*) FROM ofs) AS restaurados,
  (SELECT COUNT(*) FROM backup_ofs_teste) AS no_backup,
  CASE
    WHEN (SELECT COUNT(*) FROM ofs) = (SELECT COUNT(*) FROM backup_ofs_teste)
    THEN '‚úÖ OK'
    ELSE '‚ö†Ô∏è Diverg√™ncia!'
  END AS status

UNION ALL

SELECT
  'Atividades' AS tabela,
  (SELECT COUNT(*) FROM activities) AS restaurados,
  (SELECT COUNT(*) FROM backup_activities_teste) AS no_backup,
  CASE
    WHEN (SELECT COUNT(*) FROM activities) = (SELECT COUNT(*) FROM backup_activities_teste)
    THEN '‚úÖ OK'
    ELSE '‚ö†Ô∏è Diverg√™ncia!'
  END AS status

UNION ALL

SELECT
  'Pe√ßas Registradas' AS tabela,
  (SELECT COUNT(*) FROM pecas_registradas) AS restaurados,
  (SELECT COUNT(*) FROM backup_pecas_teste) AS no_backup,
  CASE
    WHEN (SELECT COUNT(*) FROM pecas_registradas) = (SELECT COUNT(*) FROM backup_pecas_teste)
    THEN '‚úÖ OK'
    ELSE '‚ö†Ô∏è Diverg√™ncia!'
  END AS status;

-- Mensagem final
DO $$
DECLARE
  count_ofs INTEGER;
  count_activities INTEGER;
  count_pecas INTEGER;
BEGIN
  SELECT COUNT(*) INTO count_ofs FROM ofs;
  SELECT COUNT(*) INTO count_activities FROM activities;
  SELECT COUNT(*) INTO count_pecas FROM pecas_registradas;

  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ RESTAURA√á√ÉO CONCLU√çDA!';
  RAISE NOTICE '';
  RAISE NOTICE 'üìä Dados restaurados:';
  RAISE NOTICE '  - OFs: %', count_ofs;
  RAISE NOTICE '  - Atividades: %', count_activities;
  RAISE NOTICE '  - Pe√ßas: %', count_pecas;
  RAISE NOTICE '';
  RAISE NOTICE 'üéØ Sistema restaurado ao estado do backup';
  RAISE NOTICE '';
  RAISE NOTICE 'üí° DICA: Se quiser manter os backups, n√£o os delete.';
  RAISE NOTICE '    Se quiser remov√™-los:';
  RAISE NOTICE '      DROP TABLE backup_ofs_teste;';
  RAISE NOTICE '      DROP TABLE backup_activities_teste;';
  RAISE NOTICE '      DROP TABLE backup_pecas_teste;';
  RAISE NOTICE '';
END $$;
