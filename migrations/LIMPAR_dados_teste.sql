-- =====================================================
-- SCRIPT 2: LIMPAR DADOS DE TESTE
-- =====================================================
--
-- ‚ö†Ô∏è  ATEN√á√ÉO: Este script DELETA dados permanentemente!
--
-- ANTES DE EXECUTAR:
-- 1. ‚úÖ Execute o script BACKUP_antes_limpar.sql
-- 2. ‚úÖ Confirme que voc√™ quer deletar TODAS as OFs e atividades
-- 3. ‚úÖ Tenha certeza que est√° no banco correto
--
-- O QUE SER√Å DELETADO:
-- - Todas as pe√ßas registradas
-- - Todas as atividades (ativas, pausadas, conclu√≠das)
-- - Todas as OFs (abertas, em andamento, conclu√≠das)
--
-- O QUE SER√Å MANTIDO:
-- - Usu√°rios
-- - Processos
-- - Estrutura do banco (tabelas, views, √≠ndices)
--
-- =====================================================

-- Confirma√ß√£o de seguran√ßa
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è  ATEN√á√ÉO  ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è';
  RAISE NOTICE '';
  RAISE NOTICE 'Este script ir√° DELETAR PERMANENTEMENTE:';
  RAISE NOTICE '  - Todas as pe√ßas registradas';
  RAISE NOTICE '  - Todas as atividades';
  RAISE NOTICE '  - Todas as OFs';
  RAISE NOTICE '';
  RAISE NOTICE 'Voc√™ tem 10 segundos para cancelar (Ctrl+C)...';
  RAISE NOTICE '';
  PERFORM pg_sleep(10);
  RAISE NOTICE 'üî¥ INICIANDO LIMPEZA DOS DADOS...';
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 1. LIMPAR PE√áAS REGISTRADAS
-- =====================================================
DO $$
DECLARE
  count_before INTEGER;
  count_after INTEGER;
BEGIN
  -- Contar antes
  SELECT COUNT(*) INTO count_before FROM pecas_registradas;
  RAISE NOTICE 'üì¶ Deletando % pe√ßas registradas...', count_before;

  -- Deletar
  DELETE FROM pecas_registradas;

  -- Contar depois
  SELECT COUNT(*) INTO count_after FROM pecas_registradas;
  RAISE NOTICE '‚úÖ Pe√ßas deletadas: % (Restantes: %)', count_before, count_after;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 2. LIMPAR ATIVIDADES
-- =====================================================
DO $$
DECLARE
  count_before INTEGER;
  count_after INTEGER;
BEGIN
  -- Contar antes
  SELECT COUNT(*) INTO count_before FROM activities;
  RAISE NOTICE '‚è±Ô∏è  Deletando % atividades...', count_before;

  -- Deletar (CASCADE ir√° deletar pe√ßas relacionadas automaticamente)
  DELETE FROM activities;

  -- Contar depois
  SELECT COUNT(*) INTO count_after FROM activities;
  RAISE NOTICE '‚úÖ Atividades deletadas: % (Restantes: %)', count_before, count_after;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 3. LIMPAR OFs (Ordens de Fabrica√ß√£o)
-- =====================================================
DO $$
DECLARE
  count_before INTEGER;
  count_after INTEGER;
BEGIN
  -- Contar antes
  SELECT COUNT(*) INTO count_before FROM ofs;
  RAISE NOTICE 'üìã Deletando % OFs...', count_before;

  -- Deletar
  DELETE FROM ofs;

  -- Contar depois
  SELECT COUNT(*) INTO count_after FROM ofs;
  RAISE NOTICE '‚úÖ OFs deletadas: % (Restantes: %)', count_before, count_after;
  RAISE NOTICE '';
END $$;

-- =====================================================
-- 4. VERIFICA√á√ÉO FINAL
-- =====================================================
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üîç VERIFICA√á√ÉO FINAL:';
  RAISE NOTICE '====================';
END $$;

SELECT
  'Pe√ßas Registradas' AS tabela,
  COUNT(*) AS registros_restantes,
  CASE
    WHEN COUNT(*) = 0 THEN '‚úÖ Limpa'
    ELSE '‚ö†Ô∏è Ainda h√° registros!'
  END AS status
FROM pecas_registradas

UNION ALL

SELECT
  'Atividades' AS tabela,
  COUNT(*) AS registros_restantes,
  CASE
    WHEN COUNT(*) = 0 THEN '‚úÖ Limpa'
    ELSE '‚ö†Ô∏è Ainda h√° registros!'
  END AS status
FROM activities

UNION ALL

SELECT
  'OFs' AS tabela,
  COUNT(*) AS registros_restantes,
  CASE
    WHEN COUNT(*) = 0 THEN '‚úÖ Limpa'
    ELSE '‚ö†Ô∏è Ainda h√° registros!'
  END AS status
FROM ofs

UNION ALL

SELECT
  'Usu√°rios (MANTIDOS)' AS tabela,
  COUNT(*) AS registros_restantes,
  '‚úÖ Preservados' AS status
FROM users

UNION ALL

SELECT
  'Processos (MANTIDOS)' AS tabela,
  COUNT(*) AS registros_restantes,
  '‚úÖ Preservados' AS status
FROM processes

ORDER BY tabela;

-- Mensagem final
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ LIMPEZA CONCLU√çDA!';
  RAISE NOTICE '';
  RAISE NOTICE 'üìä O que foi mantido:';
  RAISE NOTICE '  - Usu√°rios cadastrados';
  RAISE NOTICE '  - Processos (Casear, Embalagem, etc)';
  RAISE NOTICE '  - Estrutura do banco (tabelas, views, √≠ndices)';
  RAISE NOTICE '';
  RAISE NOTICE 'üóëÔ∏è  O que foi deletado:';
  RAISE NOTICE '  - Todas as pe√ßas registradas';
  RAISE NOTICE '  - Todas as atividades';
  RAISE NOTICE '  - Todas as OFs';
  RAISE NOTICE '';
  RAISE NOTICE 'üíæ Se precisar restaurar: Execute RESTAURAR_backup.sql';
  RAISE NOTICE '';
END $$;
